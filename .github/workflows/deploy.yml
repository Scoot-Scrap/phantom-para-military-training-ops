name: Production Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build & Analyze
        run: npm run analyze

      - name: Deploy to Vercel
        id: vercel-deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          prod: true

      - name: Smoke Test
        id: smoke-test
        run: |
          curl -f ${{ steps.vercel-deploy.outputs.production-url }}/dashboard || exit 1
        continue-on-error: true

      - name: Rollback on Failure
        if: ${{ steps.smoke-test.outcome != 'success' }}
        run: |
          npx vercel rollback ${{ steps.vercel-deploy.outputs.deployment-id }} --token ${{ secrets.VERCEL_TOKEN }}

      - name: Notify Slack (Success)
        if: ${{ steps.smoke-test.outcome == 'success' }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
          --data "{\"text\":\"✅ Production deploy succeeded: ${{ steps.vercel-deploy.outputs.production-url }}\"}" \
          ${{ secrets.SLACK_WEBHOOK }}

      - name: Notify Teams (Success)
        if: ${{ steps.smoke-test.outcome == 'success' }}
        run: |
          curl -H 'Content-Type: application/json' \
          -d "{\"text\":\"✅ Production deploy succeeded: ${{ steps.vercel-deploy.outputs.production-url }}\"}" \
          ${{ secrets.TEAMS_WEBHOOK }}

      - name: Notify Slack (Failure)
        if: ${{ steps.smoke-test.outcome != 'success' }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
          --data "{\"text\":\"❌ Production deploy failed, rolled back: ${{ steps.vercel-deploy.outputs.production-url }}\"}" \
          ${{ secrets.SLACK_WEBHOOK }}

      - name: Purge Cloudflare Cache
        uses: cloudflare/purge-cache-action@v1
        with:
          zone: ${{ secrets.CF_ZONE_ID }}
          api-token: ${{ secrets.CF_API_TOKEN }}

      - name: Security Scan - npm audit
        run: npm audit --audit-level=moderate

      - name: Security Scan - Snyk
        uses: snyk/actions/node@master
        with:
          args: test

      - name: Security Scan - OWASP ZAP
        uses: zaproxy/action-fullscan@v0.5.0
        with:
          target: ${{ steps.vercel-deploy.outputs.production-url }}

      - name: Lighthouse CI
        run: npm run lhci